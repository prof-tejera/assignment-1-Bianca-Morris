{"version":3,"sources":["components/documentation/DocumentComponent.js","components/generic/Loading.js","utils/tokensAndTheme.js","utils/globalPropTypes.js","components/generic/Button.js","components/generic/Input.js","utils/helpers.js","components/generic/DisplayTime.js","components/generic/DisplayRounds.js","components/generic/Panel.js","components/generic/TimeInput.js","views/DocumentationView.js","components/timers/Stopwatch.js","components/timers/Countdown.js","components/timers/XY.js","components/timers/Tabata.js","views/TimersView.js","App.js","index.js"],"names":["Wrapper","styled","div","Container","Title","RenderComponent","Documentation","table","DocumentComponent","this","props","title","component","propDocs","map","doc","prop","description","type","defaultValue","React","Component","sizeMapping","small","medium","large","Dot","span","size","color","DotGroup","Loading","defaultProps","colorTokens","PropTypes","oneOf","bool","oneOfType","string","number","arrayOf","node","func","themeColors","btnPrimary","btnPrimaryHover","btnSecondary","btnSecondaryHover","btnDanger","btnDangerHover","inputBackground","inputPlaceholder","textLight","textMedium","textDark","timerSwitchTitle","timerSwitchTitleActive","timerSelectorGradient1","timerSelectorGradient2","timerBgGradient1","timerBgGradient2","H1","ButtonSpacer","BaseButton","button","ButtonPrimary","ButtonSecondary","ButtonDanger","Button","children","variant","passProps","disabled","HiddenLabel","label","StyledInput","input","Input","name","onChange","placeholder","value","Fragment","transformTimeUnitToDisplayString","timeUnit","Error","numString","toString","length","Time","DisplayTime","hours","minutes","seconds","RoundsLabel","Rounds","DisplayRounds","currRound","totalRounds","isRest","ImageBackgroundPane","InnerPane","Panel","TimeInputLabel","TimeInputWrapper","TimeInput","hoursVal","minutesVal","secondsVal","useState","inputValue","setInputValue","onClick","console","log","Stopwatch","onStart","onReset","Countdown","onInputStartTime","XY","onInputRounds","LessMarginH1","Tabata","onInputWorkTime","onInputRestTime","Timers","TimerSelector","TimerTitle","ActiveTimerTitle","App","timers","C","timerIdx","setTimerIdx","timer","idx","to","path","DocumentationView","TimersView","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d498bb43.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Wrapper = styled.div`\n  border: 1px solid #121212;\n  margin: 20px 0px;\n`;\n\nconst Container = styled.div`\n  padding: 20px;\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst Title = styled.div`\n  display: flex;\n  justify-content: center;\n  padding-top: 20px;\n  font-size: 1.3rem;\n`;\n\nconst RenderComponent = styled.div`\n  padding: 25px;\n  display: flex;\n  align-items: center;\n`;\n\nconst Documentation = styled.table``;\n\nclass DocumentComponent extends React.Component {\n  render() {\n    return (\n      <Wrapper>\n        <Title>{this.props.title}</Title>\n        <Container>\n          <RenderComponent>{this.props.component}</RenderComponent>\n          <Documentation>\n            <tbody>\n              <tr>\n                <th>Prop</th>\n                <th>Description</th>\n                <th>Type</th>\n                <th>Default value</th>\n              </tr>\n              {this.props.propDocs.map((doc) => {\n                return (\n                  <tr key={doc.prop}>\n                    <td>{doc.prop}</td>\n                    <td>{doc.description}</td>\n                    <td>{doc.type}</td>\n                    <td>\n                      <code>{doc.defaultValue}</code>\n                    </td>\n                  </tr>\n                );\n              })}\n            </tbody>\n          </Documentation>\n        </Container>\n      </Wrapper>\n    );\n  }\n}\n\nexport default DocumentComponent;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst primaryColor = \"#ffa2bf\";\n\nconst sizeMapping = {\n  small: 10,\n  medium: 14,\n  large: 20,\n};\n\nconst Container = styled.div`\n  animation: spin 1.5s linear infinite;\n\n  @-moz-keyframes spin {\n    100% {\n      -moz-transform: rotate(360deg);\n    }\n  }\n  @-webkit-keyframes spin {\n    100% {\n      -webkit-transform: rotate(360deg);\n    }\n  }\n  @keyframes spin {\n    100% {\n      -webkit-transform: rotate(360deg);\n      transform: rotate(360deg);\n    }\n  }\n`;\n\nconst Dot = styled.span`\n  display: block;\n  width: ${(props) => props.size}px;\n  height: ${(props) => props.size}px;\n  background-color: ${(props) => props.color};\n  border-radius: 100%;\n  transform: scale(0.75);\n  transform-origin: 50% 50%;\n  opacity: 0.3;\n  animation: wobble 1s ease-in-out infinite;\n\n  @keyframes wobble {\n    0% {\n      border-radius: 25%;\n    }\n    100% {\n      border-radius: 100%;\n    }\n  }\n`;\n\nconst DotGroup = styled.div`\n  display: flex;\n`;\n\nclass Loading extends React.Component {\n  render() {\n    const size = sizeMapping[this.props.size];\n    const { color } = this.props;\n\n    return (\n      <Container>\n        <DotGroup>\n          <Dot size={size} color={color} />\n          <Dot size={size} color={color} />\n        </DotGroup>\n        <DotGroup>\n          <Dot size={size} color={color} />\n          <Dot size={size} color={color} />\n        </DotGroup>\n      </Container>\n    );\n  }\n}\n\nLoading.propTypes = {\n  size: PropTypes.oneOf([\"small\", \"medium\", \"large\"]),\n  color: PropTypes.string,\n};\n\nLoading.defaultProps = {\n  size: \"medium\",\n  color: primaryColor,\n};\n\nexport default Loading;\n","import styled from \"styled-components\";\n\n/**\n * This page consists of a bunch of design tokens like colors and typography choices\n * that will be propagated across and reused throughout the app. Individual tokens may\n * be used in various places throughout the app, so this is a centralized place\n * for quickly editing and \"remixing\" them. If I had more typography, I'd build out\n * a separate list of typography tokens, and then use those to build out some re-usable\n * styled components for each major typography element. In that case I might also make\n * more use of props to pass more information into a typography component re: styling.\n */\n\n// Raw color values (HEX)\nexport const colorTokens = {\n    babyBlueLight: \"#61cbf5\", \n    babyBlue: \"#459Fd3\",\n    pinkLight: \"#E16BBD\",\n    pinkDarker: \"#B64995\",\n    redLight: \"#D34545\",\n    redDarker: \"#A42323\",\n    tealLight: \"#45D3AD\",\n    tealDarker: \"#419786\",\n    white: \"#FFFFFF\",\n    purpleLight: \"#617cb7\",\n    purpleMedium: \"#2b3254\",\n};\n\n// Raw color values w/transparency (RGBA)\nexport const specialColorTokens = {\n    babyBlueLight: \"rgba(143,229,255,0.9)\",\n    purpleMedium: \"rgba(0,20,168,0.8)\"\n}\n\n// Values used across components for styling of specific areas & components\nexport const themeColors = {\n    // Buttons\n    btnPrimary: colorTokens.tealLight,\n    btnPrimaryHover: colorTokens.tealDarker,\n    btnSecondary: colorTokens.pinkLight,\n    btnSecondaryHover: colorTokens.pinkDarker,\n    btnDanger: colorTokens.redLight,\n    btnDangerHover: colorTokens.redDarker,\n    // Inputs\n    inputBackground: colorTokens.white,\n    inputPlaceholder: colorTokens.babyBlue,\n    // Text\n    textLight: colorTokens.white,\n    textMedium: colorTokens.babyBlue,\n    textDark: colorTokens.purpleMedium,\n    // Timer Switcher\n    timerSwitchTitle: colorTokens.purpleMedium,\n    timerSwitchTitleActive: colorTokens.babyBlueLight,\n    timerSelectorGradient1: colorTokens.purpleLight,\n    timerSelectorGradient2: colorTokens.purpleMedium,\n    // Timer Background\n    timerBgGradient1: specialColorTokens.babyBlueLight,\n    timerBgGradient2: specialColorTokens.purpleMedium\n};\n\n// Shared Basic Typography Styles\nexport const H1 = styled.div`\n    font-family: Lobster;\n    font-size: 2rem;\n`;","import PropTypes from \"prop-types\";\n\n/**\n * A centralized collection of all of the prop types used across\n * the project. Will evolve as more features are added and things change;\n * these are rough estimates of the types needed.\n */\n\nexport const globalPropTypes = {\n    // Styling Props\n    variant: PropTypes.oneOf([\"primary\", \"secondary\", \"danger\"]),\n\n    // HTML Attributes\n    buttonType: PropTypes.oneOf([\"button\", \"submit\", \"reset\"]),\n    disabled: PropTypes.bool,\n    inputType: PropTypes.oneOf([\"text\", \"number\", \"submit\"]),\n    inputValue: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number\n    ]),\n    placeholder: PropTypes.string,\n    name: PropTypes.string,\n    \n    // React Props\n    children: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node\n    ]),\n\n    // Event Handlers\n    onClick: PropTypes.func,\n    onChange: PropTypes.func,\n\n    // Timer-Specific Props\n    hours: PropTypes.number,\n    minutes: PropTypes.number,\n    seconds: PropTypes.number,\n    totalRounds: PropTypes.number,\n    currRound: PropTypes.number,\n    isRest: PropTypes.bool,\n\n};","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { globalPropTypes } from \"../../utils/globalPropTypes\";\nimport { themeColors } from \"../../utils/tokensAndTheme\";\n\nexport const ButtonSpacer = styled.div`\n    width: 300px;\n    justify-content: space-evenly;\n    display: flex;\n`;\n\nconst BaseButton = styled.button`\n    color: ${themeColors.textLight};\n    border: none;\n    padding: 10px 20px;\n    font-size: 30px;\n    font-weight: 700;\n    font-family: SourceCodePro;\n`;\n\nconst ButtonPrimary = styled(BaseButton)`\n    background-color: ${themeColors.btnPrimary};\n    :hover {\n        background-color: ${themeColors.btnPrimaryHover};\n    }\n`;\n\nconst ButtonSecondary = styled(BaseButton)`\n    background-color: ${themeColors.btnSecondary};\n    :hover {\n        background-color: ${themeColors.btnSecondaryHover};\n    }\n`;\n\nconst ButtonDanger = styled(BaseButton)`\n    background-color: ${themeColors.btnDanger};\n    :hover {\n        background-color: ${themeColors.btnDangerHover};\n    }\n`;\n\nclass Button extends React.Component {\n    render() {\n        const { children, variant, ...passProps } = this.props;\n\n        switch(variant) {\n            case \"secondary\":\n                return (\n                    <ButtonSecondary {...{ passProps }}>{children}</ButtonSecondary>\n                );\n            case \"danger\": \n                return (\n                    <ButtonDanger {...{ passProps }}>{children}</ButtonDanger>\n                );\n            case \"primary\":\n            default: \n                return (\n                    <ButtonPrimary {...{ passProps }}>{children}</ButtonPrimary>\n                );\n        }\n    }\n}\nButton.propTypes = {\n    variant: globalPropTypes.variant,\n    type: globalPropTypes.buttonType,\n    disabled: globalPropTypes.disabled,\n    children: globalPropTypes.children,\n    onClick: globalPropTypes.onClick.isRequired,\n}\nButton.defaultProps = {\n    type: \"button\",\n    disabled: false,\n    variant: \"primary\",\n    children: \"Click me\"\n}\n\nexport default Button;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { themeColors } from \"../../utils/tokensAndTheme\";\nimport { globalPropTypes } from \"../../utils/globalPropTypes\";\n\nconst HiddenLabel = styled.label`display:none;`;\n\nconst StyledInput = styled.input`\n    background-color: ${themeColors.inputBackground};\n    border: none;\n    width: 50px;\n    padding: 5px;\n    border-radius: 3px;\n    font-family: SourceCodePro;\n\n    ::placeholder {\n        color: ${themeColors.inputPlaceholder};\n        font-size: 20px;\n    }\n`;\n\nclass Input extends React.Component {\n  render() {\n    const { type, name, onChange, disabled, placeholder, value } = this.props;\n    return (\n        <React.Fragment>\n            <HiddenLabel {...{ name }} ></HiddenLabel>\n            <StyledInput {...{ name, type, onChange, disabled, placeholder, value }} />\n        </React.Fragment>\n    );\n  }\n}\nInput.propTypes = {\n    name: globalPropTypes.name.isRequired,\n    onChange: globalPropTypes.onChange.isRequired,\n    disabled: globalPropTypes.disabled,\n    placeholder: globalPropTypes.placeholder,\n    type: globalPropTypes.inputType,\n    value: globalPropTypes.inputValue\n}\nInput.defaultProps = {\n    type: \"text\",\n    disabled: false,\n    value: \"\",\n    placeholder: \"Enter text here...\"\n}\n\nexport default Input;\n","/**\n * Only one helper function here currently; this will likely expand as I \n * work on making the timers functional.\n */\n\n/**\n * Does some validation and transforms to 2 digit display string; throws error on invalid\n * @param {Number} number\n * @param {String} timeUnit\n * @returns {String} 2-digit representation of the number\n */\nexport const transformTimeUnitToDisplayString = (number, timeUnit) =>  {\n    if ( // quick validity check\n        (number < 0) ||\n        (timeUnit === \"minutes\" && number > 60) ||\n        (timeUnit === \"seconds\" && number > 60)\n    ) {\n        throw new Error (\"invalid value for time segment\");\n    }\n    \n    let numString = number.toString();\n\n    if (numString.length < 2) {\n      numString = \"0\" + numString;\n    }\n    return numString;\n  }","import React from \"react\";\nimport styled from \"styled-components\";\nimport { transformTimeUnitToDisplayString } from \"../../utils/helpers\";\nimport { globalPropTypes } from \"../../utils/globalPropTypes\";\n\nconst Time = styled.div`\n    font-size: 4em;\n    font-family: 'SourceCodePro';\n`;\n\nclass DisplayTime extends React.Component {\n  render() {\n    const { hours, minutes, seconds } = this.props;\n    return (\n        <Time>\n            {transformTimeUnitToDisplayString(hours, \"h\")}:\n            {transformTimeUnitToDisplayString(minutes, \"m\")}:\n            {transformTimeUnitToDisplayString(seconds, \"s\")}\n        </Time>\n    );\n  }\n}\nDisplayTime.propTypes = {\n    hours: globalPropTypes.hours,\n    minutes: globalPropTypes.minutes,\n    seconds: globalPropTypes.seconds\n}\nDisplayTime.defaultProps = {\n    hours: 0,\n    minutes: 0,\n    seconds: 0,\n}\n\nexport default DisplayTime;","import React from \"react\";\nimport styled from \"styled-components\";\nimport { globalPropTypes } from \"../../utils/globalPropTypes\";\n\nexport const RoundsLabel = styled.div`\n  font-family: BubblegumSans;\n  padding-bottom: 15px;\n  padding-top: 10px;\n`;\n\nconst Rounds = styled.div`\n  font-family: BubblegumSans;\n`;\n\nclass DisplayRounds extends React.Component {\n  render() {\n    const { currRound, totalRounds, isRest } = this.props;\n    return (\n        <Rounds>\n            (Round: {currRound}\n            {totalRounds > 0 && <span> of {totalRounds}</span>}\n            { isRest && <span> - Rest</span>})\n        </Rounds>\n    );\n  }\n}\nDisplayRounds.propTypes = {\n    totalRounds: globalPropTypes.totalRounds,\n    currRound: globalPropTypes.currRound,\n    isRest: globalPropTypes.isRest\n}\nDisplayRounds.defaultProps = {\n    totalRounds: 0,\n    currRound: 0,\n    isRest: false\n}\n\nexport default DisplayRounds;","import React from \"react\";\nimport styled from \"styled-components\";\nimport { themeColors } from \"./../../utils/tokensAndTheme\";\nimport { globalPropTypes } from \"../../utils/globalPropTypes\";\n\nconst ImageBackgroundPane = styled.div`\n    background: linear-gradient(120deg,${themeColors.timerBgGradient1},${themeColors.timerBgGradient2}),url(\"/maarten-van-den-heuvel-unsplash-sm.jpg\");\n    height: 390px;\n    width: 550px;\n    border-radius: 0 20px 20px 0;\n    padding: 15px 20px 5px 20px;\n    background-position: center;\n    background-size: cover;\n`;\n\nconst InnerPane = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    box-sizing: border-box;\n    flex-shrink: 0;\n    border-radius: 20px;\n    border: 4px dotted #FFFFFF;\n    height: 380px;\n    width: 100%;\n    color: ${themeColors.textLight};\n`;\n\n\nclass Panel extends React.Component {\n\n    render() {\n        const { children } = this.props;\n        return (\n            <ImageBackgroundPane>\n                <InnerPane>\n                { children }\n                </InnerPane>  \n            </ImageBackgroundPane>\n        );\n    }\n    \n}\nPanel.propTypes = {\n    children: globalPropTypes.children.isRequired,\n}\n\nexport default Panel;","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { globalPropTypes } from \"../../utils/globalPropTypes\";\nimport Input from \"../generic/Input\";\n\nexport const TimeInputLabel = styled.div`\n  display: flex;\n  align-items: center;\n  font-family: BubblegumSans;\n  width: 100%;\n  justify-content: center;\n`;\n\nconst TimeInputWrapper = styled.div`\n    display: flex;\n    width: 200px;\n    justify-content: space-between;\n    margin: 10px 5px;\n`;\n\nconst TimeInput = (props) => {\n    const { disabled, hoursVal, minutesVal, secondsVal, onChange } = props;\n    return (\n        <TimeInputWrapper>\n            <Input placeholder=\"HH\" value={hoursVal} type=\"number\" name=\"hourInput\" {...{ disabled, onChange }} />\n            <Input placeholder=\"MM\" value={minutesVal} type=\"number\" name=\"minuteInput\" {...{ disabled, onChange }} />\n            <Input placeholder=\"SS\" value={secondsVal} type=\"number\" name=\"secondInput\" {...{ disabled, onChange }} />\n        </TimeInputWrapper>\n    )\n}\nTimeInput.propTypes = {\n    hoursVal: globalPropTypes.hours,\n    minutesVal: globalPropTypes.minutes,\n    secondsVal: globalPropTypes.seconds,\n    onChange: globalPropTypes.onChange.isRequired,\n    disabled: globalPropTypes.disabled\n}\nTimeInput.defaultProps = {\n    disabled: false,\n    hoursVal: 0,\n    minutesVal: 0,\n    secondsVal: 0\n}\n\nexport default TimeInput;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport DocumentComponent from \"../components/documentation/DocumentComponent\";\n\nimport Loading from \"../components/generic/Loading\";\nimport Button from \"../components/generic/Button\";\nimport Input from \"../components/generic/Input\";\nimport DisplayTime from \"../components/generic/DisplayTime\";\nimport DisplayRounds from \"../components/generic/DisplayRounds\";\nimport Panel from \"../components/generic/Panel\";\nimport TimeInput from \"../components/generic/TimeInput\";\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: center;\n  width: 100%;\n`;\n\nconst Title = styled.div`\n  font-size: 2rem;\n`;\n\nconst Documentation = () => {\n\n  const [ inputValue, setInputValue ] = useState(\"Test\");\n  \n  return (\n    <Container>\n      <div>\n        <Title>Documentation</Title>\n        <DocumentComponent\n          title=\"Loading spinner \"\n          component={<Loading />}\n          propDocs={[\n            {\n              prop: \"size\",\n              description: \"Changes the size of the loading spinner\",\n              type: \"string\",\n              defaultValue: \"'medium'\",\n            },\n          ]}\n        />\n        <DocumentComponent\n          title=\"Button \"\n          component={<Button onClick={() => console.log(\"Button clicked!\")} />}\n          propDocs={[\n            {\n              prop: \"type\",\n              description: \"HTML attribute type of the button ('button' | 'submit' | 'reset')\",\n              type: \"string\",\n              defaultValue: \"'button'\",\n            },\n            {\n              prop: \"disabled\",\n              description: \"Is the button clickable?\",\n              type: \"boolean\",\n              defaultValue: \"false\",\n            },\n            {\n              prop: \"onClick\",\n              description: \"Function defining what to do when button is clicked\",\n              type: \"function\",\n              defaultValue: \"undefined\",\n            },\n            {\n              prop: \"variant\",\n              description: \"One of: ('primary' | 'secondary' | 'danger')\",\n              type: \"string\",\n              defaultValue: \"'primary'\",\n            },\n            {\n              prop: \"children\",\n              description: \"What to render inside of the button\",\n              type: \"node OR array of nodes\",\n              defaultValue: \"'Click Me'\",\n            },\n          ]}\n        />\n        <DocumentComponent\n          title=\"Input \"\n          component={<Input name=\"docInput\" onChange={setInputValue} value={inputValue} />}\n          propDocs={[\n            {\n              prop: \"type\",\n              description: \"HTML attribute type of the input ('text' | 'number' | 'submit')\",\n              type: \"string\",\n              defaultValue: \"'text'\",\n            },\n            {\n              prop: \"placeholder\",\n              description: \"Placeholder text for the input\",\n              type: \"string\",\n              defaultValue: \"'Enter text here...'\"\n            },\n            {\n              prop: \"disabled\",\n              description: \"Is is possible to enter text?\",\n              type: \"boolean\",\n              defaultValue: \"false\",\n            },\n            {\n              prop: \"onChange\",\n              description: \"Function defining what to do when text is updated\",\n              type: \"function\",\n              defaultValue: \"undefined\",\n            },\n            {\n              prop: \"name\",\n              description: \"An identifier for this input\",\n              type: \"string\",\n              defaultValue: \"undefined\",\n            },\n            {\n              prop: \"value\",\n              description: \"Current value of the input (should match 'type' prop)\",\n              type: \"string or number\",\n              defaultValue: \"''\",\n            },\n          ]}\n        />\n        <DocumentComponent\n          title=\"Display Time \"\n          component={<DisplayTime hours={0} minutes={0} seconds={0} />}\n          propDocs={[\n            {\n              prop: \"hours\",\n              description: \"A numeric representation of hours; max 2 digits\",\n              type: \"number\",\n              defaultValue: \"0\",\n            },\n            {\n              prop: \"minutes\",\n              description: \"A numeric representation of minutes; max 2 digits\",\n              type: \"number\",\n              defaultValue: \"0\",\n            },\n            {\n              prop: \"seconds\",\n              description: \"A numeric representation of seconds; max 2 digits\",\n              type: \"number\",\n              defaultValue: \"0\",\n            },\n          ]}\n        />\n        <DocumentComponent\n          title=\"Display Rounds \"\n          component={<DisplayRounds />}\n          propDocs={[\n            {        \n              prop: \"currRound\",\n              description: \"The current round\",\n              type: \"number\",\n              defaultValue: \"0\",\n            },\n            {\n              prop: \"totalRounds\",\n              description: \"The total number of rounds selected\",\n              type: \"number\",\n              defaultValue: \"0\"\n            },\n            {\n              prop: \"isRest\",\n              description: \"Is this a rest interval?\",\n              type: \"boolean\",\n              defaultValue: \"false\",\n            },\n          ]}\n        />\n        <DocumentComponent\n          title=\"Panel \"\n          component={<Panel />}\n          propDocs={[\n            {        \n              prop: \"children\",\n              description: \"React children to render inside of the panel\",\n              type: \"node or array of nodes\",\n              defaultValue: \"undefined\",\n            },\n          ]}\n        />\n        <DocumentComponent\n          title=\"TimeInput \"\n          component={<TimeInput />}\n          propDocs={[\n            {\n              prop: \"hoursVal\",\n              description: \"A numeric representation of hours; max 2 digits\",\n              type: \"number\",\n              defaultValue: \"0\",\n            },\n            {\n              prop: \"minutesVal\",\n              description: \"A numeric representation of minutes; max 2 digits\",\n              type: \"number\",\n              defaultValue: \"0\",\n            },\n            {\n              prop: \"secondsVal\",\n              description: \"A numeric representation of seconds; max 2 digits\",\n              type: \"number\",\n              defaultValue: \"0\",\n            },\n            {\n              prop: \"disabled\",\n              description: \"Should the inputs be disabled or enabled?\",\n              type: \"boolean\",\n              defaultValue: \"false\"\n            },\n            {\n              prop: \"onChange\",\n              description: \"A single function to handle updates for hours, minutes and seconds\",\n              type: \"function\",\n              defaultValue: \"undefined\"\n            }\n          ]}\n        />\n      </div>\n    </Container>\n  );\n}\n\nexport default Documentation;\n","import React from \"react\";\n\nimport { H1 } from \"../../utils/tokensAndTheme\";\nimport Button, { ButtonSpacer } from \"../generic/Button\";\nimport DisplayTime from \"../generic/DisplayTime\";\n\nclass Stopwatch extends React.Component {\n  onStart = () => {\n    console.log(\"Clicked Start!\");\n  }\n\n  onReset = () => {\n    console.log(\"Clicked Reset!\");\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <H1>Stopwatch</H1>\n        <DisplayTime />\n        <ButtonSpacer>\n          <Button onClick={this.onStart}>START</Button>\n          <Button onClick={this.onReset} variant=\"secondary\">RESET</Button>\n        </ButtonSpacer>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Stopwatch;\n","import React from \"react\";\n\nimport { H1 } from \"../../utils/tokensAndTheme\";\nimport Button, { ButtonSpacer } from \"../generic/Button\";\nimport DisplayTime from \"../generic/DisplayTime\";\nimport TimeInput, { TimeInputLabel } from \"../generic/TimeInput\";\n\n\n\nclass Countdown extends React.Component {\n  onStart = () => {\n    console.log(\"Clicked Start!\");\n  }\n\n  onReset = () => {\n    console.log(\"Clicked Reset!\");\n  }\n\n  onInputStartTime = () => {\n    console.log(\"start time\");\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <H1>Countdown</H1>\n        <DisplayTime />\n        <TimeInputLabel>\n          Start Time:\n          <TimeInput onChange={this.onInputStartTime}/>\n        </TimeInputLabel>\n        <ButtonSpacer>\n          <Button onClick={this.onStart}>START</Button>\n          <Button onClick={this.onReset} variant=\"secondary\">RESET</Button>\n        </ButtonSpacer>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Countdown;\n","import React from \"react\";\n\nimport { H1 } from \"../../utils/tokensAndTheme\";\nimport Button, { ButtonSpacer } from \"../generic/Button\";\nimport DisplayTime from \"../generic/DisplayTime\";\nimport DisplayRounds, { RoundsLabel } from \"../generic/DisplayRounds\";\nimport TimeInput, { TimeInputLabel } from \"../generic/TimeInput\";\nimport Input from \"../generic/Input\";\n\n\nclass XY extends React.Component {\n  onStart = () => {\n    console.log(\"Clicked Start!\");\n  }\n\n  onReset = () => {\n    console.log(\"Clicked Reset!\");\n  }\n\n  onInputStartTime = () => {\n    console.log(\"start time\");\n  }\n\n  onInputRounds = () => {\n    console.log(\"rounds\");\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <H1>XY</H1>\n        <DisplayRounds />\n        <DisplayTime />\n        <TimeInputLabel>\n          Start Time:\n          <TimeInput onChange={this.onInputStartTime}/>\n        </TimeInputLabel>\n        <RoundsLabel>\n          # of Rounds:\n          <Input name=\"numRoundsXY\" placeholder=\"1\" onChange={this.onInputRounds}/>\n        </RoundsLabel>\n        <ButtonSpacer>\n          <Button onClick={this.onStart}>START</Button>\n          <Button onClick={this.onReset} variant=\"secondary\">RESET</Button>\n        </ButtonSpacer>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default XY;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { H1 } from \"../../utils/tokensAndTheme\";\nimport Button, { ButtonSpacer } from \"../generic/Button\";\nimport DisplayTime from \"../generic/DisplayTime\";\nimport DisplayRounds, { RoundsLabel } from \"../generic/DisplayRounds\";\nimport TimeInput, { TimeInputLabel } from \"../generic/TimeInput\";\nimport Input from \"../generic/Input\";\n\nconst LessMarginH1 = styled(H1)`\n  margin: 5px;\n`;\n\nclass Tabata extends React.Component {\n  onStart = () => {\n    console.log(\"Clicked Start!\");\n  }\n\n  onReset = () => {\n    console.log(\"Clicked Reset!\");\n  }\n\n  onInputWorkTime = () => {\n    console.log(\"work time\");\n  }\n\n  onInputRestTime = () => {\n    console.log(\"rest time\");\n  }\n\n  onInputRounds = () => {\n    console.log(\"rounds\");\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <LessMarginH1>Tabata</LessMarginH1>\n        <DisplayRounds currRound={0} totalRounds={1}/>\n        <DisplayTime />\n        <TimeInputLabel>\n          Work Time:\n          <TimeInput onChange={this.onInputWorkTime} />\n        </TimeInputLabel>\n        <TimeInputLabel>\n          Rest Time:\n          <TimeInput onChange={this.onInputRestTime}/>\n        </TimeInputLabel>\n        <RoundsLabel>\n          # of Rounds:\n          <Input name=\"numRoundsTabata\" placeholder=\"1\" onChange={this.onInputRounds}/>\n        </RoundsLabel>\n        <ButtonSpacer>\n          <Button onClick={this.onStart}>START</Button>\n          <Button onClick={this.onReset} variant=\"secondary\">RESET</Button>\n        </ButtonSpacer>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Tabata;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport Panel from \"../components/generic/Panel\";\nimport Stopwatch from \"../components/timers/Stopwatch\";\nimport Countdown from \"../components/timers/Countdown\";\nimport XY from \"../components/timers/XY\";\nimport Tabata from \"../components/timers/Tabata\";\n\nimport { themeColors } from \"../utils/tokensAndTheme\";\n\nconst Timers = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst TimerSelector = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 250px;\n  height: 350px;\n  justify-content: center;\n  background: linear-gradient(143deg, ${themeColors.timerSelectorGradient1} 0%, ${themeColors.timerSelectorGradient2} 100%);\n  overflow: visible;\n  border-radius: 20px 0 0 20px;\n  padding: 30px;\n`;\n\nconst TimerTitle = styled.div`\n  background-color: ${themeColors.timerSwitchTitle};\n  color: ${themeColors.textMedium};\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  padding: 20px 0;\n  margin-top: 10px;\n  margin-bottom: 10px;\n  text-transform: uppercase;\n  font-weight: 700;\n  cursor: pointer;\n  font-family: SourceCodePro;\n`;\n\nconst ActiveTimerTitle = styled(TimerTitle)`\n  background-color: ${themeColors.timerSwitchTitleActive};\n  color: ${themeColors.textLight};\n`;\n\nfunction App() {\n  const timers = [\n    { title: \"Stopwatch\", C: <Stopwatch /> },\n    { title: \"Countdown\", C: <Countdown /> },\n    { title: \"XY\", C: <XY /> },\n    { title: \"Tabata\", C: <Tabata /> },\n  ];\n\n  const [ timerIdx, setTimerIdx ] = useState(0);\n\n  return (\n    <Timers>\n      <TimerSelector >\n      {timers.map((timer, idx) => {\n        if (timerIdx === idx) {\n          return <ActiveTimerTitle key={timer.title} onClick={() => setTimerIdx(idx)}>{timer.title}</ActiveTimerTitle>;\n        }\n        return <TimerTitle key={timer.title} onClick={() => setTimerIdx(idx)}>{timer.title}</TimerTitle>;\n      })}\n      </TimerSelector>\n      <Panel>\n        {timers[timerIdx].C}\n      </Panel>\n    </Timers>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nimport DocumentationView from \"./views/DocumentationView\";\nimport TimersView from \"./views/TimersView\";\n\nconst Container = styled.div`\n  background: #f0f6fb;\n  height: 100vh;\n  overflow: auto;\n`;\n\nfunction App() {\n  return (\n    <Container>\n      <Router>\n        <nav>\n          <ul>\n            <li>\n              <Link to=\"/\">Timers</Link>\n            </li>\n            <li>\n              <Link to=\"/docs\">Documentation</Link>\n            </li>\n          </ul>\n        </nav>\n        <Switch>\n          <Route path=\"/docs\">\n            <DocumentationView />\n          </Route>\n          <Route path=\"/\">\n            <TimersView />\n          </Route>\n        </Switch>\n      </Router>\n    </Container>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}